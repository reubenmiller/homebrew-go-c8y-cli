# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class GoC8yCli < Formula
  desc "Cumulocity IoT command line tool"
  homepage "https://goc8ycli.netlify.app/"
  version "2.44.2"
  license "MIT"

  depends_on "bash" => :optional
  depends_on "fish" => :optional
  depends_on "git" => :optional
  depends_on "jq" => :optional
  depends_on "zsh" => :optional

  on_macos do
    on_intel do
      url "https://github.com/reubenmiller/go-c8y-cli/releases/download/v2.44.2/c8y_2.44.2_macOS_amd64.tar.gz"
      sha256 "3561c777c44b64108113b7af2780b02ca8059637080779e96fea0a647b2481a9"

      def install
        bin.install "bin/c8y"
        man1.install Dir["share/man/man1/*"]

        config_dir = etc/"go-c8y-cli"

        if config_dir.exist?
          # FileUtils.rm_r etc/"go-c8y-cli"
          system "git", "-C", config_dir, "pull", "--ff-only"
        else
          system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
        end

        # Add completions
        output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
        (bash_completion/"c8y").write output
        output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
        (zsh_completion/"_c8y").write output
        output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
        (fish_completion/"c8y.fish").write output
      end
    end
    on_arm do
      url "https://github.com/reubenmiller/go-c8y-cli/releases/download/v2.44.2/c8y_2.44.2_macOS_arm64.tar.gz"
      sha256 "71a4bc148cf0461a2890c9ee8b49519f1a575c776313ec22c0db118c1126610b"

      def install
        bin.install "bin/c8y"
        man1.install Dir["share/man/man1/*"]

        config_dir = etc/"go-c8y-cli"

        if config_dir.exist?
          # FileUtils.rm_r etc/"go-c8y-cli"
          system "git", "-C", config_dir, "pull", "--ff-only"
        else
          system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
        end

        # Add completions
        output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
        (bash_completion/"c8y").write output
        output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
        (zsh_completion/"_c8y").write output
        output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
        (fish_completion/"c8y.fish").write output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/reubenmiller/go-c8y-cli/releases/download/v2.44.2/c8y_2.44.2_linux_amd64.tar.gz"
        sha256 "1cbd989a0064537328f7fc65eee0174c07212bc7433e4c85fba072157159fe39"

        def install
          bin.install "bin/c8y"
          man1.install Dir["share/man/man1/*"]

          config_dir = etc/"go-c8y-cli"

          if config_dir.exist?
            # FileUtils.rm_r etc/"go-c8y-cli"
            system "git", "-C", config_dir, "pull", "--ff-only"
          else
            system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
          end

          # Add completions
          output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
          (bash_completion/"c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
          (zsh_completion/"_c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
          (fish_completion/"c8y.fish").write output
        end
      end
    end
    on_arm do
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/reubenmiller/go-c8y-cli/releases/download/v2.44.2/c8y_2.44.2_linux_armv6.tar.gz"
        sha256 "4ad47b226818889f15b4540e22ee9f765916f61f0e6b2d76a95bc861f18a1617"

        def install
          bin.install "bin/c8y"
          man1.install Dir["share/man/man1/*"]

          config_dir = etc/"go-c8y-cli"

          if config_dir.exist?
            # FileUtils.rm_r etc/"go-c8y-cli"
            system "git", "-C", config_dir, "pull", "--ff-only"
          else
            system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
          end

          # Add completions
          output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
          (bash_completion/"c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
          (zsh_completion/"_c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
          (fish_completion/"c8y.fish").write output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/reubenmiller/go-c8y-cli/releases/download/v2.44.2/c8y_2.44.2_linux_arm64.tar.gz"
        sha256 "345daf3465c1cc61a700a0084391830c97570e7d5cf6d827d053edd6ffd3e8bd"

        def install
          bin.install "bin/c8y"
          man1.install Dir["share/man/man1/*"]

          config_dir = etc/"go-c8y-cli"

          if config_dir.exist?
            # FileUtils.rm_r etc/"go-c8y-cli"
            system "git", "-C", config_dir, "pull", "--ff-only"
          else
            system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
          end

          # Add completions
          output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
          (bash_completion/"c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
          (zsh_completion/"_c8y").write output
          output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
          (fish_completion/"c8y.fish").write output
        end
      end
    end
  end

  def caveats
    <<~EOS
      Please add the following to your shell profile to enable usage of "set-session" and other helpful c8y utility functions

      bash: ~/.bashrc

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.sh"

      zsh: ~/.zshrc

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.zsh"

      fish: ~/.config/fish/config.fish

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.fish"

      powershell: ~/.config/powershell/Microsoft.PowerShell_profile.ps1
        . "#{etc}/go-c8y-cli/shell/c8y.plugin.ps1"

      You will also need to force reload of your profile:

        source <profile>
    EOS
  end

  test do
    system "#{bin}/c8y version --select version"
  end
end
